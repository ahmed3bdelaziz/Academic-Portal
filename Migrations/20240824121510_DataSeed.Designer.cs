// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task7;

#nullable disable

namespace Task7.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240824121510_DataSeed")]
    partial class DataSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Task7.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<int>("MaximumDegree")
                        .HasColumnType("int");

                    b.Property<int>("MinimumDegree")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InstructorId = 1,
                            MaximumDegree = 100,
                            MinimumDegree = 60,
                            Name = "Introduction to Programming"
                        },
                        new
                        {
                            Id = 2,
                            InstructorId = 2,
                            MaximumDegree = 100,
                            MinimumDegree = 70,
                            Name = "Advanced Mathematics"
                        },
                        new
                        {
                            Id = 3,
                            InstructorId = 3,
                            MaximumDegree = 100,
                            MinimumDegree = 80,
                            Name = "Quantum Mechanics"
                        },
                        new
                        {
                            Id = 4,
                            InstructorId = 4,
                            MaximumDegree = 100,
                            MinimumDegree = 65,
                            Name = "Organic Chemistry"
                        },
                        new
                        {
                            Id = 5,
                            InstructorId = 1,
                            MaximumDegree = 100,
                            MinimumDegree = 55,
                            Name = "Data Structures"
                        },
                        new
                        {
                            Id = 6,
                            InstructorId = 2,
                            MaximumDegree = 100,
                            MinimumDegree = 60,
                            Name = "Linear Algebra"
                        },
                        new
                        {
                            Id = 7,
                            InstructorId = 5,
                            MaximumDegree = 100,
                            MinimumDegree = 75,
                            Name = "Machine Learning"
                        },
                        new
                        {
                            Id = 8,
                            InstructorId = 6,
                            MaximumDegree = 100,
                            MinimumDegree = 70,
                            Name = "Genetics"
                        },
                        new
                        {
                            Id = 9,
                            InstructorId = 1,
                            MaximumDegree = 100,
                            MinimumDegree = 65,
                            Name = "Database Systems"
                        },
                        new
                        {
                            Id = 10,
                            InstructorId = 2,
                            MaximumDegree = 100,
                            MinimumDegree = 60,
                            Name = "Statistical Analysis"
                        });
                });

            modelBuilder.Entity("Task7.Models.CourseResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<decimal>("Degree")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TraineeId");

                    b.ToTable("CourseResults");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Degree = 95m,
                            TraineeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Degree = 85m,
                            TraineeId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Degree = 78m,
                            TraineeId = 3
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            Degree = 92m,
                            TraineeId = 4
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            Degree = 88m,
                            TraineeId = 5
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 6,
                            Degree = 80m,
                            TraineeId = 1
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 7,
                            Degree = 90m,
                            TraineeId = 2
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 8,
                            Degree = 77m,
                            TraineeId = 3
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 9,
                            Degree = 85m,
                            TraineeId = 4
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 10,
                            Degree = 91m,
                            TraineeId = 5
                        },
                        new
                        {
                            Id = 11,
                            CourseId = 1,
                            Degree = 82m,
                            TraineeId = 6
                        },
                        new
                        {
                            Id = 12,
                            CourseId = 2,
                            Degree = 70m,
                            TraineeId = 7
                        },
                        new
                        {
                            Id = 13,
                            CourseId = 3,
                            Degree = 88m,
                            TraineeId = 8
                        },
                        new
                        {
                            Id = 14,
                            CourseId = 4,
                            Degree = 65m,
                            TraineeId = 6
                        });
                });

            modelBuilder.Entity("Task7.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ManagerName = "Dr. Smith",
                            Name = "Computer Science"
                        },
                        new
                        {
                            Id = 2,
                            ManagerName = "Dr. Johnson",
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = 3,
                            ManagerName = "Dr. Williams",
                            Name = "Physics"
                        },
                        new
                        {
                            Id = 4,
                            ManagerName = "Dr. Davis",
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = 5,
                            ManagerName = "Dr. Miller",
                            Name = "Biology"
                        });
                });

            modelBuilder.Entity("Task7.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            DepartmentId = 1,
                            Img = "https://placehold.co/200x200/000000/FFFFFF",
                            Name = "John Doe",
                            Salary = 50000m
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St",
                            DepartmentId = 2,
                            Img = "https://placehold.co/200x200/FF0000/FFFFFF",
                            Name = "Jane Roe",
                            Salary = 55000m
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Oak St",
                            DepartmentId = 3,
                            Img = "https://placehold.co/200x200/00FF00/FFFFFF",
                            Name = "Michael Brown",
                            Salary = 60000m
                        },
                        new
                        {
                            Id = 4,
                            Address = "101 Pine St",
                            DepartmentId = 4,
                            Img = "https://placehold.co/200x200/0000FF/FFFFFF",
                            Name = "Emily White",
                            Salary = 65000m
                        },
                        new
                        {
                            Id = 5,
                            Address = "202 Oak St",
                            DepartmentId = 1,
                            Img = "https://placehold.co/200x200/FFFF00/000000",
                            Name = "Nancy Green",
                            Salary = 70000m
                        },
                        new
                        {
                            Id = 6,
                            Address = "303 Maple St",
                            DepartmentId = 5,
                            Img = "https://placehold.co/200x200/800080/FFFFFF",
                            Name = "Linda Gray",
                            Salary = 72000m
                        });
                });

            modelBuilder.Entity("Task7.Models.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Trainees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "789 Oak St",
                            Grade = "A",
                            Img = "https://placehold.co/200x200/FFA500/FFFFFF",
                            Name = "Alice Brown"
                        },
                        new
                        {
                            Id = 2,
                            Address = "101 Pine St",
                            Grade = "B",
                            Img = "https://placehold.co/200x200/808080/000000",
                            Name = "Bob Green"
                        },
                        new
                        {
                            Id = 3,
                            Address = "202 Maple St",
                            Grade = "A",
                            Img = "https://placehold.co/200x200/000000/FFFFFF",
                            Name = "Charlie Black"
                        },
                        new
                        {
                            Id = 4,
                            Address = "303 Birch St",
                            Grade = "C",
                            Img = "https://placehold.co/200x200/FF0000/FFFFFF",
                            Name = "Diana White"
                        },
                        new
                        {
                            Id = 5,
                            Address = "404 Cedar St",
                            Grade = "B",
                            Img = "https://placehold.co/200x200/00FF00/FFFFFF",
                            Name = "Eva Blue"
                        },
                        new
                        {
                            Id = 6,
                            Address = "505 Willow St",
                            Grade = "A",
                            Img = "https://placehold.co/200x200/0000FF/FFFFFF",
                            Name = "Frank Gray"
                        },
                        new
                        {
                            Id = 7,
                            Address = "606 Ash St",
                            Grade = "B",
                            Img = "https://placehold.co/200x200/FFFF00/000000",
                            Name = "Grace Adams"
                        },
                        new
                        {
                            Id = 8,
                            Address = "707 Cedar St",
                            Grade = "A",
                            Img = "https://placehold.co/200x200/800080/FFFFFF",
                            Name = "Henry Hill"
                        });
                });

            modelBuilder.Entity("Task7.Models.Course", b =>
                {
                    b.HasOne("Task7.Models.Instructor", "Instructor")
                        .WithMany("Courses")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Task7.Models.CourseResult", b =>
                {
                    b.HasOne("Task7.Models.Course", "Course")
                        .WithMany("CourseResults")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Task7.Models.Trainee", "Trainee")
                        .WithMany("CourseResults")
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("Task7.Models.Instructor", b =>
                {
                    b.HasOne("Task7.Models.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Task7.Models.Course", b =>
                {
                    b.Navigation("CourseResults");
                });

            modelBuilder.Entity("Task7.Models.Department", b =>
                {
                    b.Navigation("Instructors");
                });

            modelBuilder.Entity("Task7.Models.Instructor", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Task7.Models.Trainee", b =>
                {
                    b.Navigation("CourseResults");
                });
#pragma warning restore 612, 618
        }
    }
}
